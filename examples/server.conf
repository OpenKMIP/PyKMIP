[server]
hostname=127.0.0.1
port=5696
certificate_path=/etc/pykmip/certs/server_cert.pem
key_path=/etc/pykmip/certs/server_private_key.pem
ca_path=/etc/pykmip/certs/server_ca_cert.pem
auth_suite=Basic
policy_path=/etc/pykmip/policies
diff --git a/examples/server.conf b/examples/server.conf
index 6801f94..d1b0fad 100644
--- a/examples/server.conf
+++ b/examples/server.conf
@@ -11,4 +11,7 @@ tls_cipher_suites=
     EXAMPLE_CIPHER_SUITE_1
     EXAMPLE_CIPHER_SUITE_2
     EXAMPLE_CIPHER_SUITE_3
+query_exclude_operations=
+    ENCRYPT
+    DECRYPT
 logging_level=INFO
diff --git a/kmip/services/server/config.py b/kmip/services/server/config.py
index 912d980..39b5bab 100644
--- a/kmip/services/server/config.py
+++ b/kmip/services/server/config.py
@@ -52,7 +52,8 @@ class KmipServerConfig(object):
             'enable_tls_client_auth',
             'tls_cipher_suites',
             'logging_level',
-            'database_path'
+            'database_path',
+            'query_exclude_operations'
         ]
 
     def set_setting(self, setting, value):
@@ -96,6 +97,8 @@ class KmipServerConfig(object):
             self._set_tls_cipher_suites(value)
         elif setting == 'logging_level':
             self._set_logging_level(value)
+        elif setting == 'query_exclude_operations':
+            self._set_query_exclude_operations(value)
         else:
             self._set_database_path(value)
 
@@ -182,6 +185,10 @@ class KmipServerConfig(object):
             self._set_logging_level(
                 parser.get('server', 'logging_level')
             )
+        if parser.has_option('server', 'query_exclude_operations'):
+            self._set_query_exclude_operations(
+                parser.get('server', 'query_exclude_operations')
+            )
         if parser.has_option('server', 'database_path'):
             self._set_database_path(parser.get('server', 'database_path'))
 
@@ -350,3 +357,22 @@ class KmipServerConfig(object):
                 "The database path, if specified, must be a valid path to a "
                 "SQLite database file."
             )
+    def _set_query_exclude_operations(self, value):
+        if not value:
+            self.settings['query_exclude_operations'] = None
+            return
+        if isinstance(value, six.string_types):
+            value = value.split()
+        if isinstance(value, list):
+            for entry in value:
+                if not isinstance(entry, six.string_types):
+                    raise exceptions.ConfigurationError(
+                        "The query excluded operators must be a set of strings "
+                        "representing extra operations that will be allowed."
+                    )
+            self.settings['query_exclude_operations'] = list(set(value))
+        else:
+            raise exceptions.ConfigurationError(
+                "The query excluded operators must be a set of strings "
+                "representing extra operations that will be allowed."
+            )
\ No newline at end of file
diff --git a/kmip/services/server/engine.py b/kmip/services/server/engine.py
index efcf118..a97403f 100644
--- a/kmip/services/server/engine.py
+++ b/kmip/services/server/engine.py
@@ -43,6 +43,7 @@ from kmip.pie import factory
 from kmip.pie import objects
 from kmip.pie import sqltypes
 
+from kmip.services.server import config
 from kmip.services.server import policy
 from kmip.services.server.crypto import engine
 
@@ -87,6 +88,11 @@ class KmipEngine(object):
         self._logger = logging.getLogger('kmip.server.engine')
 
         self._cryptography_engine = engine.CryptographyEngine()
+        self.config = config.KmipServerConfig()
+        self.config.set_setting('query_exclude_operations',['ENCRYPT', 'DECRYPT'])
+        print("--Settings-------------------------------")
+        print(self.config.settings)
+        print("--------------------------------")
 
         self.database_path = 'sqlite:///{}'.format(database_path)
         if not database_path:
@@ -2942,6 +2948,14 @@ class KmipEngine(object):
                     enums.Operation.MAC
                 ])
 
+            if isinstance(self.config.settings.get('query_exclude_operations'), list):
+                for value in self.config.settings.get('query_exclude_operations'):
+                    names = [member.name for member in enums.Operation]
+                    if value in names:
+                        operations.remove(enums.Operation[value])
+                    else:
+                        raise exceptions.ConfigurationError("The excluded operations must be valid")
+
         if enums.QueryFunction.QUERY_OBJECTS in queries:
             objects = list()
         if enums.QueryFunction.QUERY_SERVER_INFORMATION in queries:
diff --git a/kmip/services/server/server.py b/kmip/services/server/server.py
index 534ab61..8e92442 100644
--- a/kmip/services/server/server.py
+++ b/kmip/services/server/server.py
@@ -61,7 +61,8 @@ class KmipServer(object):
             tls_cipher_suites=None,
             logging_level=None,
             live_policies=False,
-            database_path=None
+            database_path=None,
+            query_exclude_operations=None
     ):
         """
         Create a KmipServer.
@@ -132,6 +133,7 @@ class KmipServer(object):
         self._setup_logging(log_path)
 
         self.config = config.KmipServerConfig()
+
         self._setup_configuration(
             config_path,
             hostname,
@@ -144,13 +146,14 @@ class KmipServer(object):
             enable_tls_client_auth,
             tls_cipher_suites,
             logging_level,
-            database_path
+            database_path,
+            query_exclude_operations
         )
+
         self.live_policies = live_policies
         self.policies = {}
 
         self._logger.setLevel(self.config.settings.get('logging_level'))
-
         cipher_suites = self.config.settings.get('tls_cipher_suites')
         if self.config.settings.get('auth_suite') == 'TLS1.2':
             self.auth_suite = auth.TLS12AuthenticationSuite(cipher_suites)
@@ -194,7 +197,8 @@ class KmipServer(object):
             enable_tls_client_auth=None,
             tls_cipher_suites=None,
             logging_level=None,
-            database_path=None
+            database_path=None,
+            query_exclude_operations=None
     ):
         if path:
             self.config.load_settings(path)
@@ -227,6 +231,11 @@ class KmipServer(object):
             self.config.set_setting('logging_level', logging_level)
         if database_path:
             self.config.set_setting('database_path', database_path)
+        if query_exclude_operations:
+            self.config.set_setting(
+                'query_exclude_operations',
+                query_exclude_operations.split(',')
+            )
 
     def start(self):
         """=True
tls_cipher_suites=
    EXAMPLE_CIPHER_SUITE_1
    EXAMPLE_CIPHER_SUITE_2
    EXAMPLE_CIPHER_SUITE_3
query_exclude_operations=
    ENCRYPT
    DECRYPT
logging_level=INFO
